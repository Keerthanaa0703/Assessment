# -*- coding: utf-8 -*-
"""Lab 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K4bNfHUfqkhEDqieMmGVZe9xRpmiA6rH
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler

data = pd.read_csv('/content/expenses.csv')

# 1. Handling Missing Values and Outliers
print("Missing values before handling:")
print(data.isnull().sum())

Q1 = data.quantile(0.25)
Q3 = data.quantile(0.75)
IQR = Q3 - Q1
outliers = ((data < (Q1 - 1.5 * IQR)) | (data > (Q3 + 1.5 * IQR))).any(axis=1)
cleaned_df = data[~outliers]
cleaned_df
plt.figure(figsize=(10, 6))
sns.boxplot(data=cleaned_df[['age', 'bmi', 'children', 'charges']])
plt.title('Boxplot for Outlier Detection')
plt.show()

# 2.
data = pd.get_dummies(cleaned_df, columns=['sex', 'smoker', 'region'])
data

X = data.drop(columns=['charges'])
y = data['charges']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
rmse = np.sqrt(mse)
print(f'Mean Squared Error: {mse}')
print(f'R-squared: {r2}')
print(f'Root Mean Squared Error: {rmse}')

age = float(input("Enter the age: "))
bmi = float(input("Enter the BMI: "))
children = int(input("Enter the number of children/dependents: "))
sex = int(input("Is the insured individual male? (1 for Yes, 0 for No): "))
smoker = int(input("Is the insured individual a smoker? (1 for Yes, 0 for No): "))
region_southeast = int(input("Is the insured individual from the Southeast region? (1 for Yes, 0 for No): "))
region_northwest = int(input("Is the insured individual from the Northwest region? (1 for Yes, 0 for No): "))
region_southwest = int(input("Is the insured individual from the Southwest region? (1 for Yes, 0 for No): "))
input_data = pd.DataFrame({
    'age': [age],
    'bmi': [bmi],
    'children': [children],
    'sex_male': [sex],
    'smoker_yes': [smoker],
    'region_northwest': [region_northwest],
    'region_southeast': [region_southeast],
    'region_southwest': [region_southwest]
})

predicted_charges = model.predict(input_data)
print("Predicted Insurance Charges:", predicted_charges[0])